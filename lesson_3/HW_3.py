# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
a = int(input("введите число №1: "))
b = int(input("введите число №2: "))
def my_func():
  try:
      return a / b
  except ZeroDivisionError:
      print("На 0 делить нельзя")
      return "None"

print(my_func())

#2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения,
# город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы. Реализовать вывод
# данных о пользователе одной строкой

def user_info(**kwargs):
    return kwargs

user = {
    "name": input("Введите ваше имя: "),
    "surname": input("Введите вашу фвмилию: "),
    "bd": input("Введите ваш год рождения: "),
    "city": input("Введите ваш город: "),
    "e-mail": input("Введите ваш e-mail: "),
    "tel": input("Введите ваш номер телефона: ")
    }
i = user_info(**user)
print(f'User_info: Ф.И.: {i.get("surname")} {i.get("name")} Год рождения: {i.get("bd")} Город: {i.get("city")} e-mail: {i.get("e-mail")} Телефон: {i.get("tel")}')

# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух аргументов.

def my_func():
    arg1 = int(input("Введите число 1: "))
    arg2 = int(input("Введите число 2: "))
    arg3 = int(input("Введите число 3: "))
    l = [arg1, arg2, arg3]
    min_l = min(l)
    l.remove(min_l)
    sum_arg = sum(l)
    return sum_arg

sum_arg2 = my_func()
print(f"Сумма наибольших двух аргументов раван: {sum_arg2}")


#4. Программа принимает действительное положительное число x и целое отрицательное число y. Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
#
def my_func(x, y=-1):
    try:
        y = (-1)*abs(int('%.0f'%y))
        return x**y
    except ZeroDivisionError as err:
        print(err)
        return None
    except ValueError as err:
        print(err)
        return None
    except TypeError as err:
        print(err)
        return None
print(my_func(2, -3))

# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, выполнение программы завершается. Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
#
my_list = []
stop = False
while stop is False:
    for i in input("Введите строку чисел, разделенных пробелом . (завершить - End)").split():
        if i == "End":
            stop = True
            break
        else:
            my_list.append(int(i))
    print(sum(my_list))


# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().
def int_func():
    str_b = a.capitalize()
    return str_b

a = str(input("Напишите что-нибудь: "))
print(int_func())

list_b = str(input("Напишите что-нибудь маленькой буквы: "))

str_l = []
str_l = list_b.split(' ')

c = []
for a in str_l:
    c.append(int_func())
print(' '.join(c))